// <auto-generated />
using HoleyForkingShirt.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HoleyForkingShirt.Migrations.StoreDb
{
    [DbContext(typeof(StoreDbContext))]
    [Migration("20200430233705_ye")]
    partial class ye
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HoleyForkingShirt.Models.Cart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("HoleyForkingShirt.Models.CartItems", b =>
                {
                    b.Property<int>("CartID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("CartID", "ProductID");

                    b.HasIndex("ProductID");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("HoleyForkingShirt.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<string>("Sku")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "The sole has split in the front, but you could probably fix it with a couple nails?",
                            Image = "https://torange.biz/photofx/180/8/light-grey-fuzzy-border-torn-old-shoe-180924.jpg",
                            Name = "Hiking Boots",
                            Price = 15.00m,
                            Size = 3,
                            Sku = "500boots500"
                        },
                        new
                        {
                            ID = 2,
                            Description = "A four-in-one set of our latest trashy skinny jeans.",
                            Image = "https://cdn.pixabay.com/photo/2019/10/27/14/34/jeans-4581931_960_720.jpg",
                            Name = "Skinny Jeans Set",
                            Price = 25.00m,
                            Size = 1,
                            Sku = "42jeanset42"
                        },
                        new
                        {
                            ID = 3,
                            Description = "These jeans are our best in stock! only two holes",
                            Image = "https://haitao.nos.netease.com/20190108012559f80a180239864203a738ba1c7269aed6.jpeg?klsize=1534x2301",
                            Name = "Patched Up Hipster Mom Jeans",
                            Price = 39.00m,
                            Size = 2,
                            Sku = "670Patchy670"
                        },
                        new
                        {
                            ID = 4,
                            Description = "This one's a fixer-upper! Break out your Singer 4452 and you'll be nice and cozy this winter",
                            Image = "https://storage.needpix.com/rsynced_images/clothes-2063789_1280.jpg",
                            Name = "Sweatshirt With Split Seams",
                            Price = 12.00m,
                            Size = 5,
                            Sku = "85StretchySweat85"
                        },
                        new
                        {
                            ID = 5,
                            Description = "How else are you going to show off your sick tats than with a bunch of holes in your shirt?",
                            Image = "https://c1.wallpaperflare.com/preview/114/131/759/fashion-vintage-distressed-store.jpg",
                            Name = "Grey Moth-Eaten Tee-shirt",
                            Price = 18.00m,
                            Size = 3,
                            Sku = "123Mothy123"
                        },
                        new
                        {
                            ID = 6,
                            Description = "The cuffs on this lumberjack's dream are scuffed and buttonless, but hey, just roll 'em up!",
                            Image = "https://i.imgur.com/2beVsrR.jpg",
                            Name = "Green Flannel Shirt",
                            Price = 23.00m,
                            Size = 4,
                            Sku = "789GreenWoodsman789"
                        },
                        new
                        {
                            ID = 7,
                            Description = "Show off your undershirt with this absolutely DESTROYED denim jacket",
                            Image = "https://imgur.com/C6F0b17.jpg",
                            Name = "Super Torn Up Denim Jacket",
                            Price = 13.99m,
                            Size = 2,
                            Sku = "super80super"
                        },
                        new
                        {
                            ID = 8,
                            Description = "Give that right big toe some breathing room with these un-darned socks!",
                            Image = "https://imgur.com/qFObFkC.jpg",
                            Name = "Holey Blue Socks",
                            Price = 7.00m,
                            Size = 5,
                            Sku = "27darn27"
                        },
                        new
                        {
                            ID = 9,
                            Description = "The tag says XS, but we both know that's no longer true.",
                            Image = "https://imgur.com/GOTgNnd.jpg",
                            Name = "A verrrrry Stretched Black Sweater",
                            Price = 9.50m,
                            Size = 3,
                            Sku = "1800stretch1800"
                        },
                        new
                        {
                            ID = 10,
                            Description = "This one might actually be intentional. This shirt looks perfect for a budding (starving) musician.",
                            Image = "https://imgur.com/XNFTeA1.jpg",
                            Name = "Slashed Rocker Tee",
                            Price = 15.00m,
                            Size = 1,
                            Sku = "86ROCK86"
                        });
                });

            modelBuilder.Entity("HoleyForkingShirt.Models.CartItems", b =>
                {
                    b.HasOne("HoleyForkingShirt.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoleyForkingShirt.Models.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
